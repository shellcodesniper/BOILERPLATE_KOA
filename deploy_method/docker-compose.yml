version: "3.9"
services:
  nginx:
    image: "nginx:stable-alpine"
    container_name: nginx
    environment:
      - LISTEN_PORT=${LISTEN_PORT}
      - TARGET_CONTAINER=${TARGET_CONTAINER}
      - TARGET_PORT=${TARGET_PORT}
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - /home/ec2-user/server/nginx/templates:/etc/nginx/templates
      - /home/ec2-user/server/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /home/ec2-user/server/etc/ssl/:/etc/ssl/
# 여기서 /Users/hacker/WorkSpace/B_Personal/Docker_HealthChecker 인 이유는 docker는 host를 공유하기 때문에
# 공유해오는것도 호스트의 파일이다.

  server_master:
    image: "shellcodesniper/PACKAGE_NAME:latest"
    container_name: server_master
    environment:
      - SERVICE_LEVEL=master
    expose:
      - 3000
    restart: "no"
    healthcheck:
      test: sh -c 'curl --silent --fail "http://localhost:3000/" || exit 1'
      #test: sh -c 'exit 0'
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 120s

  server_slave:
    image: "shellcodesniper/PACKAGE_NAME:latest"
    container_name: server_slave
    environment:
      - SERVICE_LEVEL=slave
    expose:
      - 3000
    restart: "no"
    healthcheck:
      #test: sh -c 'exit 0'
      test: sh -c 'curl --silent --fail "http://localhost:3000/" || exit 1'
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 120s
  server_rollback:
    image: "shellcodesniper/PACKAGE_NAME:rollback"
    container_name: server_rollback
    environment:
      - SERVICE_LEVEL=rollback
    expose:
      - 3000
    restart: "no"
    healthcheck:
      #test: sh -c 'exit 0'
      test: sh -c 'curl --silent --fail "http://localhost:3000/" || exit 1'
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 120s